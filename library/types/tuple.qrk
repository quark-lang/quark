(import "std:classes/show.qrk")
(import "std:classes/bifunctor.qrk")
(data (Tuple a b) [
  (Tuple a b)
])

(defn fst [x] (match x
  [(Tuple a _) a]))

(defn snd [x] (match x
  [(Tuple _ b) b]))

(defn , [a b] (Tuple a b))

(instance [(Show a) (Show b)] (Show (Tuple a b)) [
  (let show (fn [x] (match x 
    [(Tuple a b) (++ "(" (++ (show a) (++ ", " (++ (show b) ")"))))])))
])

(instance [] (Functor (Tuple a)) [
  (defn fmap [f x] (match x
    [(Tuple a b) (Tuple a (f b))]))
])

(instance [] (Applicative (Tuple a)) [
  (defn pure [a] (Tuple a a))
  (defn <*> [(Tuple f a) (Tuple b c)] (Tuple (f b) (a c)))
])

(instance [] (Bifunctor Tuple) [
  (defn bimap [f g x] (match x
    [(Tuple a b) (Tuple (f a) (g b))]))
])