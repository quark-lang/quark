(import "std:classes/show.qrk")
(data (Tuple a b) [
  (Tuple a b)
])

(defn fst [x] (match x
  [(Tuple a _) a]))

(defn snd [x] (match x
  [(Tuple _ b) b]))

(defn , [a b] (Tuple a b))

(defn tuple:first [f (Tuple x _)] (f x))
(defn tuple:second [f (Tuple _ x)] (f x))

(instance [(Show a) (Show b)] (Show (Tuple a b)) [
  (let show (fn [x] (match x 
    [(Tuple a b) (++ "(" (++ (show a) (++ ", " (++ (show b) ")"))))])))
])
